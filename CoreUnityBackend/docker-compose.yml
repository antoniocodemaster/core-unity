services:
  redis:
    image: redis:latest
    container_name: redis_user_session
    restart: always
    ports:
     - "6379:6379"
    command: redis-server --appendonly yes
    volumes:
     - redis_data:/data
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 3

  keycloak-db:
    image: postgres:15
    container_name: keycloak_db
    restart: always
    environment:
      POSTGRES_DB: keycloak
      POSTGRES_USER: keycloak
      POSTGRES_PASSWORD: mysecretpassword
    volumes:
      - keycloak_db_data:/var/lib/postgresql/data
    ports:
      - "5433:5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U keycloak -d keycloak"]
      interval: 10s
      timeout: 5s
      retries: 5

  keycloak:
    image: quay.io/keycloak/keycloak:23.0.1
    container_name: keycloak
    restart: always
    command: start-dev
    environment:
      KEYCLOAK_ADMIN: admin
      KEYCLOAK_ADMIN_PASSWORD: admin
      KC_DB: postgres
      KC_DB_URL: jdbc:postgresql://keycloak-db:5432/keycloak
      KC_DB_USERNAME: keycloak
      KC_DB_PASSWORD: mysecretpassword
      KC_HOSTNAME_STRICT: "false"
    ports:
      - "8082:8080"
    depends_on:
      keycloak-db:
        condition: service_healthy
    volumes:
      - keycloak_data:/opt/keycloak/data

  identity_db:
    build:
      context: ./docker_db/identity-db
    container_name: identity_db
    restart: always
    environment:
      POSTGRES_USER: postgres
      POSTGRES_PASSWORD: mysecretpassword
    ports:
      - "5434:5432"
    volumes:
      - identity_db_data:/var/lib/postgresql/data

  coreunity.webapi:
    image: ${DOCKER_REGISTRY-}coreunitywebapi
    build:
      context: .
      dockerfile: CoreUnity.WebAPI/Dockerfile
    container_name: core_unity_webapi
    depends_on:
      redis:
        condition: service_healthy
      keycloak:
        condition: service_started
    environment:
      - ASPNETCORE_ENVIRONMENT=Development
      - REDIS_CONNECTION=redis:6379
      - KEYCLOAK_AUTH_URL=http://keycloak:8080/realms/core_unity_realm/protocol/openid-connect/token
    ports:
      - "8081:8081"
      - "8080:8080"
    restart: always

volumes:
  redis_data:
    driver: local
  keycloak_db_data:
    driver: local
  keycloak_data:
    driver: local
  identity_db_data:
    driver: local